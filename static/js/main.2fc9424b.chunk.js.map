{"version":3,"sources":["utils/store.js","components/Fallback/index.js","components/Fallback/Fallback.js","routes.js","app.js","reportWebVitals.js","index.js","utils/firebase.js","utils/config.js","slices/app.slice.js","utils/const.js","slices/bills.slice.js","components/FontIcon/FontIcon.js","components/FontIcon/index.js","components/Spinner/Spinner.js","components/Spinner/index.js"],"names":["store","configureStore","reducer","app","bills","middleware","_toConsumableArray","getDefaultMiddleware","Fallback","useEffect","NProgress","start","done","Auth","React","lazy","Dashboard","Router","dispatch","useDispatch","_useSelector","useSelector","state","checked","loggedIn","actions","authenticate","_jsx","HashRouter","children","Suspense","fallback","_jsxs","Switch","Route","path","dashboard","Redirect","to","className","Spinner","size","color","isLoading","App","loadFontIcons","Provider","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","analytics","auth","firestore","storage","ref","performance","slice","createSlice","name","initialState","me","reducers","setMe","action","_objectSpread","payload","setLoggedIn","onAuthStateChanged","_asyncToGenerator","_regeneratorRuntime","mark","_callee","user","wrap","_context","prev","next","abrupt","collection","doc","uid","get","sent","emailVerified","exists","id","data","stop","_x","apply","arguments","signup","_ref2","fullName","email","password","Promise","_ref3","_callee2","resolve","reject","_yield$auth$createUse","_context2","createUserWithEmailAndPassword","sendEmailVerification","set","uuidv4","t0","_x2","_x3","login","_ref4","_ref5","_callee3","_yield$auth$signInWit","_context3","signInWithEmailAndPassword","Error","_x4","_x5","logout","_ref6","_callee4","_context4","signOut","_x6","_x7","resetPassword","sendPasswordResetEmail","profile","confirmEmail","dashboardPath","greeting","suppliers","addSupplier","editSupplier","customers","calculateStatistics","supplierBills","results","paid","leftToPay","sumOfValues","forEach","bill","value","statistics","setSupplierBills","updateSupplierBills","newBills","concat","removeSupplierBill","filter","updateTransaction","transaction","map","billID","transactions","removeTransaction","t","fetchSupplierBills","userId","supplierBillSnapshot","where","orderBy","docs","reduce","referencePoint","supplierTransactionsSnapshot","creationDate","moment","toDate","format","billDate","transactionDoc","transactionDate","Number","push","addTransaction","transactionToAdd","Date","addBill","billNumber","supplierName","_ref7","billToAdd","_x8","deleteBill","_ref8","_ref9","_callee5","querySnapshot","_context5","delete","_x9","_x10","deleteTransaction","_ref10","_ref11","_callee6","_context6","_x11","_x12","FontIcon","style","FontAwesomeIcon","icon","defaultProps","library","add","faExclamationTriangle","faEnvelopeOpenText","faPaperPlane","others","_objectWithoutProperties","_excluded","ClipLoader","loading"],"mappings":"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","file":"static/js/main.2fc9424b.chunk.js","sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport logger from 'redux-logger'\r\nimport app from 'slices/app.slice'\r\nimport bills from 'slices/bills.slice'\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    app,\r\n    bills,\r\n  },\r\n  middleware:\r\n    process.env.NODE_ENV === 'production'\r\n      ? [...getDefaultMiddleware()]\r\n      : [...getDefaultMiddleware(), logger],\r\n})\r\n\r\nexport default store\r\n","import Fallback from './Fallback'\r\n\r\nexport default Fallback\r\n","import { useEffect } from 'react'\r\nimport NProgress from 'nprogress'\r\nimport 'nprogress/nprogress.css'\r\n\r\nconst Fallback = () => {\r\n  useEffect(() => {\r\n    NProgress.start()\r\n    return () => {\r\n      NProgress.done()\r\n    }\r\n  })\r\n\r\n  return ''\r\n}\r\n\r\nexport default Fallback\r\n","import React, { Suspense, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom'\r\nimport { actions } from 'slices/app.slice'\r\nimport { path } from 'utils/const'\r\nimport Fallback from 'components/Fallback'\r\nimport Spinner from 'components/Spinner'\r\n\r\nconst Auth = React.lazy(() => import('./pages/auth'))\r\nconst Dashboard = React.lazy(() => import('./pages/dashboard'))\r\n\r\nfunction Router() {\r\n  const dispatch = useDispatch()\r\n  const { checked, loggedIn } = useSelector((state) => state.app)\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.authenticate())\r\n  }, [])\r\n\r\n  if (!checked) {\r\n    return (\r\n      <div className=\"app-loader-container\">\r\n        <Spinner size=\"4rem\" color=\"white\" isLoading />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <HashRouter>\r\n      <Suspense fallback={<Fallback />}>\r\n        {!loggedIn ? (\r\n          <Switch>\r\n            <Route path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n            <Redirect to=\"/\" />\r\n          </Switch>\r\n        ) : (\r\n          <Switch>\r\n            <Route path={path.dashboard}>\r\n              <Dashboard />\r\n            </Route>\r\n            <Redirect to={path.dashboard} />\r\n          </Switch>\r\n        )}\r\n      </Suspense>\r\n    </HashRouter>\r\n  )\r\n}\r\n\r\nexport default Router\r\n","import { useEffect } from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { loadFontIcons } from 'components/FontIcon'\r\nimport store from 'utils/store'\r\nimport Router from './routes'\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    loadFontIcons()\r\n  }, [])\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <div data-testid=\"app\" className=\"app\">\r\n        <Router />\r\n      </div>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from 'app'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'primereact/resources/themes/lara-light-indigo/theme.css'\r\nimport 'primereact/resources/primereact.min.css'\r\nimport 'primeicons/primeicons.css'\r\nimport 'theme/reset.scss'\r\nimport 'react-modern-drawer/dist/index.css'\r\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\nimport 'firebase/storage'\r\nimport 'firebase/performance'\r\nimport 'firebase/analytics'\r\nimport config from './config'\r\n\r\nfirebase.initializeApp(config.firebase)\r\nfirebase.analytics()\r\n\r\nexport const auth = firebase.auth()\r\nexport const storage = firebase.storage().ref()\r\nexport const performance = firebase.performance()\r\nexport const firestore = firebase.firestore()\r\n\r\nexport default firebase\r\n","export default {\r\n  firebase: {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  },\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { firestore, auth } from 'utils/firebase'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\n// ------------------------------------\r\n// State\r\n// ------------------------------------\r\n\r\nconst initialState = {\r\n  checked: false,\r\n  loggedIn: false,\r\n  me: {},\r\n}\r\n\r\n// ------------------------------------\r\n// Slices\r\n// -----------------------------------\r\n\r\nconst slice = createSlice({\r\n  name: 'app',\r\n  initialState,\r\n  reducers: {\r\n    setMe: (state, action) => ({\r\n      ...state,\r\n      me: action.payload.me,\r\n      loggedIn: action.payload.loggedIn,\r\n      checked: true,\r\n    }),\r\n    setLoggedIn: (state, action) => ({\r\n      ...state,\r\n      loggedIn: action.payload,\r\n    }),\r\n  },\r\n})\r\n\r\n// ------------------------------------\r\n// Actions\r\n// -----------------------------------\r\n\r\nexport const authenticate = () => (dispatch) => {\r\n  auth.onAuthStateChanged(async (me) => {\r\n    if (!me) {\r\n      return dispatch(\r\n        slice.actions.setMe({\r\n          loggedIn: false,\r\n          checked: true,\r\n          me: {},\r\n        }),\r\n      )\r\n    }\r\n\r\n    // get user from firestore\r\n    const user = await firestore.collection('users').doc(me?.uid).get()\r\n\r\n    // login\r\n    return dispatch(\r\n      slice.actions.setMe({\r\n        loggedIn: me?.emailVerified && user.exists,\r\n        me: user.exists\r\n          ? { id: me?.uid, emailVerified: me?.emailVerified, ...user.data() }\r\n          : {},\r\n        checked: true,\r\n      }),\r\n    )\r\n  })\r\n}\r\n\r\nconst signup =\r\n  ({ fullName, email, password }) =>\r\n  () =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        // create user\r\n        const { user } = await auth.createUserWithEmailAndPassword(\r\n          email,\r\n          password,\r\n        )\r\n\r\n        // send confirmation email\r\n        await user.sendEmailVerification()\r\n\r\n        // store user info in firestore\r\n        await firestore.collection('users').doc(user.uid).set({\r\n          id: uuidv4(),\r\n          fullName,\r\n          email,\r\n        })\r\n\r\n        resolve(user)\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n\r\nconst login =\r\n  ({ email, password }) =>\r\n  (dispatch) =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        const { user } = await auth.signInWithEmailAndPassword(email, password)\r\n        if (!user)\r\n          reject(new Error('Failed to login. please try it again later'))\r\n        if (!user.emailVerified) await user.sendEmailVerification()\r\n        dispatch(authenticate())\r\n        resolve(user)\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n\r\nconst logout = () => (dispatch) =>\r\n  new Promise(async (resolve, reject) => {\r\n    try {\r\n      await auth.signOut()\r\n      dispatch(\r\n        slice.actions.setMe({\r\n          checked: true,\r\n          loggedIn: false,\r\n          me: {},\r\n        }),\r\n      )\r\n      resolve()\r\n    } catch (err) {\r\n      reject(err)\r\n    }\r\n  })\r\n\r\nconst resetPassword = (email) => () => auth.sendPasswordResetEmail(email)\r\n\r\n// ------------------------------------\r\n// Exports\r\n// ------------------------------------\r\n\r\nexport const actions = {\r\n  ...slice.actions,\r\n  authenticate,\r\n  signup,\r\n  login,\r\n  logout,\r\n  resetPassword,\r\n}\r\n\r\nexport default slice.reducer\r\n","export const path = {\r\n  login: '/login',\r\n  signup: '/signup',\r\n  profile: '/profile',\r\n  resetPassword: '/reset-password',\r\n  confirmEmail: '/confirm-email',\r\n  dashboard: '/dashboard',\r\n}\r\n\r\nexport const dashboardPath = {\r\n  greeting: '/dashboard/greeting',\r\n  suppliers: '/dashboard/suppliers',\r\n  addSupplier: '/dashboard/suppliers/add',\r\n  editSupplier: '/dashboard/suppliers/:id/edit',\r\n  customers: '/dashboard/customers',\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport moment from 'moment'\r\nimport { firestore } from 'utils/firebase'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\n// ------------------------------------\r\n// Helpers\r\n// ------------------------------------\r\n\r\nconst calculateStatistics = (supplierBills) => {\r\n  const results = {\r\n    paid: 0,\r\n    leftToPay: 0,\r\n    sumOfValues: 0,\r\n  }\r\n  supplierBills.forEach((bill) => {\r\n    results.paid += bill.paid\r\n    results.leftToPay += bill.leftToPay\r\n    results.sumOfValues += bill.value\r\n  })\r\n  return results\r\n}\r\n\r\n// ------------------------------------\r\n// State\r\n// ------------------------------------\r\n\r\nconst initialState = {\r\n  supplierBills: [],\r\n  statistics: {\r\n    paid: 0,\r\n    leftToPay: 0,\r\n    sumOfValues: 0,\r\n  },\r\n}\r\n\r\n// ------------------------------------\r\n// Slices\r\n// -----------------------------------\r\n\r\nconst slice = createSlice({\r\n  name: 'bills',\r\n  initialState,\r\n  reducers: {\r\n    setSupplierBills: (state, action) => ({\r\n      ...state,\r\n      statistics: action.payload.statistics,\r\n      supplierBills: action.payload.supplierBills,\r\n    }),\r\n    updateSupplierBills: (state, action) => {\r\n      const newBills = [action.payload.bill].concat(state.supplierBills)\r\n      const statistics = calculateStatistics(newBills)\r\n      return {\r\n        ...state,\r\n        statistics,\r\n        supplierBills: newBills,\r\n      }\r\n    },\r\n    removeSupplierBill: (state, action) => {\r\n      const newBills = state.supplierBills.filter(\r\n        (bill) => bill.id !== action.payload.id,\r\n      )\r\n      const statistics = calculateStatistics(newBills)\r\n      return {\r\n        ...state,\r\n        statistics,\r\n        supplierBills: newBills,\r\n      }\r\n    },\r\n    updateTransaction: (state, action) => {\r\n      const { transaction } = action.payload\r\n\r\n      const newBills = state.supplierBills.map((bill) => {\r\n        if (bill.id === transaction.billID) {\r\n          const paid = transaction.value + bill.paid\r\n          const leftToPay = bill.leftToPay - transaction.value\r\n\r\n          return {\r\n            ...bill,\r\n            paid,\r\n            leftToPay,\r\n            transactions: [transaction].concat(bill.transactions),\r\n          }\r\n        }\r\n        return bill\r\n      })\r\n      const statistics = calculateStatistics(newBills)\r\n      return {\r\n        ...state,\r\n        statistics,\r\n        supplierBills: newBills,\r\n      }\r\n    },\r\n    removeTransaction: (state, action) => {\r\n      const { transaction } = action.payload\r\n\r\n      const newBills = state.supplierBills.map((bill) => {\r\n        if (bill.id === transaction.billID) {\r\n          const paid = bill.paid - transaction.value\r\n          const leftToPay = bill.leftToPay + transaction.value\r\n\r\n          return {\r\n            ...bill,\r\n            paid,\r\n            leftToPay,\r\n            transactions: bill.transactions.filter(\r\n              (t) => t.id !== transaction.id,\r\n            ),\r\n          }\r\n        }\r\n        return bill\r\n      })\r\n      const statistics = calculateStatistics(newBills)\r\n      return {\r\n        ...state,\r\n        statistics,\r\n        supplierBills: newBills,\r\n      }\r\n    },\r\n  },\r\n})\r\n\r\n// ------------------------------------\r\n// Actions\r\n// -----------------------------------\r\n\r\nconst fetchSupplierBills =\r\n  ({ userId }) =>\r\n  (dispatch) =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        const bills = []\r\n        const supplierBillSnapshot = await firestore\r\n          .collection('supplierBill')\r\n          .where('userId', '==', userId)\r\n          .orderBy('creationDate', 'desc')\r\n          .get()\r\n\r\n        await supplierBillSnapshot.docs.reduce(async (referencePoint, doc) => {\r\n          // Check for execution status of previous iteration, i.e. wait for it to get finished\r\n          await referencePoint\r\n          const document = doc.data()\r\n\r\n          const supplierTransactionsSnapshot = await firestore\r\n            .collection('transactions')\r\n            .where('billID', '==', document.id)\r\n            .orderBy('creationDate', 'desc')\r\n            .get()\r\n\r\n          document.transactions = []\r\n          document.paid = 0\r\n          document.leftToPay = document.value\r\n\r\n          document.creationDate = moment(document.creationDate.toDate()).format(\r\n            'DD/MM/YYYY',\r\n          )\r\n          document.billDate = moment(document.billDate.toDate()).format(\r\n            'DD/MM/YYYY',\r\n          )\r\n\r\n          supplierTransactionsSnapshot.docs.forEach((transactionDoc) => {\r\n            const transaction = transactionDoc.data()\r\n            transaction.creationDate = moment(\r\n              transaction.creationDate.toDate(),\r\n            ).format('DD/MM/YYYY')\r\n            transaction.transactionDate = moment(\r\n              transaction.transactionDate.toDate(),\r\n            ).format('DD/MM/YYYY')\r\n\r\n            document.paid += Number(transaction.value)\r\n            document.leftToPay -= Number(transaction.value)\r\n            document.transactions.push(transaction)\r\n          })\r\n          bills.push(document)\r\n        }, Promise.resolve())\r\n        const statistics = calculateStatistics(bills)\r\n        dispatch(\r\n          slice.actions.setSupplierBills({ supplierBills: bills, statistics }),\r\n        )\r\n\r\n        resolve()\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n\r\nconst addTransaction =\r\n  ({ billID, transactionDate, value }) =>\r\n  (dispatch) =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        const id = uuidv4()\r\n        // store user info in firestore\r\n        await firestore\r\n          .collection('transactions')\r\n          .doc(id)\r\n          .set({\r\n            id,\r\n            billID,\r\n            transactionDate,\r\n            creationDate: new Date(),\r\n            value: Number(value),\r\n          })\r\n        const transaction = await firestore\r\n          .collection('transactions')\r\n          .doc(id)\r\n          .get()\r\n        const transactionToAdd = transaction.data()\r\n        transactionToAdd.creationDate = moment(\r\n          transactionToAdd.creationDate.toDate(),\r\n        ).format('DD/MM/YYYY')\r\n        transactionToAdd.transactionDate = moment(\r\n          transactionToAdd.transactionDate.toDate(),\r\n        ).format('DD/MM/YYYY')\r\n\r\n        dispatch(\r\n          slice.actions.updateTransaction({ transaction: transactionToAdd }),\r\n        )\r\n\r\n        resolve(transactionToAdd)\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n\r\nconst addBill =\r\n  ({ billNumber, billDate, supplierName, value, userId }) =>\r\n  (dispatch) =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        const id = uuidv4()\r\n        // store user info in firestore\r\n        await firestore\r\n          .collection('supplierBill')\r\n          .doc(id)\r\n          .set({\r\n            id,\r\n            billNumber,\r\n            billDate,\r\n            supplierName,\r\n            creationDate: new Date(),\r\n            value: Number(value),\r\n            userId,\r\n          })\r\n        const bill = await firestore.collection('supplierBill').doc(id).get()\r\n        const billToAdd = bill.data()\r\n        billToAdd.creationDate = moment(billToAdd.creationDate.toDate()).format(\r\n          'DD/MM/YYYY',\r\n        )\r\n        billToAdd.billDate = moment(billToAdd.billDate.toDate()).format(\r\n          'DD/MM/YYYY',\r\n        )\r\n        billToAdd.paid = 0\r\n        billToAdd.leftToPay = Number(value)\r\n        billToAdd.transactions = []\r\n        dispatch(slice.actions.updateSupplierBills({ bill: billToAdd }))\r\n\r\n        resolve(billToAdd)\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n\r\nconst deleteBill =\r\n  ({ id }) =>\r\n  (dispatch) =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        // store user info in firestore\r\n        const querySnapshot = await firestore\r\n          .collection('supplierBill')\r\n          .where('id', '==', id)\r\n          .get()\r\n        const transactionsSnapshot = await firestore\r\n          .collection('transactions')\r\n          .where('billID', '==', id)\r\n          .get()\r\n        transactionsSnapshot.docs.forEach((transaction) => {\r\n          transaction.ref.delete()\r\n        })\r\n        querySnapshot.docs[0].ref.delete()\r\n        dispatch(slice.actions.removeSupplierBill({ id }))\r\n\r\n        resolve()\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n\r\nconst deleteTransaction =\r\n  ({ transaction }) =>\r\n  (dispatch) =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        // store user info in firestore\r\n        const querySnapshot = await firestore\r\n          .collection('transactions')\r\n          .where('id', '==', transaction.id)\r\n          .get()\r\n\r\n        querySnapshot.docs[0].ref.delete()\r\n        dispatch(slice.actions.removeTransaction({ transaction }))\r\n\r\n        resolve()\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n// ------------------------------------\r\n// Exports\r\n// ------------------------------------\r\n\r\nexport const actions = {\r\n  ...slice.actions,\r\n  fetchSupplierBills,\r\n  addTransaction,\r\n  addBill,\r\n  deleteBill,\r\n  deleteTransaction,\r\n}\r\n\r\nexport default slice.reducer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport {\r\n  faExclamationTriangle,\r\n  faEnvelopeOpenText,\r\n  faPaperPlane,\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\n// TODO: add icons here...\r\nexport const loadFontIcons = () =>\r\n  library.add(faExclamationTriangle, faEnvelopeOpenText, faPaperPlane)\r\n\r\nconst FontIcon = ({ name, className, style }) => (\r\n  <FontAwesomeIcon icon={name} className={className} style={style} />\r\n)\r\n\r\nFontIcon.propTypes = {\r\n  name: PropTypes.string,\r\n  className: PropTypes.string,\r\n  style: PropTypes.objectOf(PropTypes.object),\r\n}\r\n\r\nFontIcon.defaultProps = {\r\n  name: '',\r\n  className: '',\r\n  style: {},\r\n}\r\n\r\nexport default FontIcon\r\n","import FontIcon, { loadFontIcons as load } from './FontIcon'\r\n\r\nexport const loadFontIcons = load\r\n\r\nexport default FontIcon\r\n","import { ClipLoader } from 'react-spinners'\r\nimport { PropTypes } from 'prop-types'\r\n\r\n/**\r\n * types of spinners\r\n * https://www.davidhu.io/react-spinners/\r\n *\r\n * github\r\n * https://github.com/davidhu2000/react-spinners\r\n */\r\n\r\nconst Spinner = ({ color, size, isLoading, ...others }) => (\r\n  <ClipLoader color={color} size={size} loading={isLoading} {...others} />\r\n)\r\n\r\nSpinner.propTypes = {\r\n  color: PropTypes.string,\r\n  size: PropTypes.string,\r\n  isLoading: PropTypes.bool,\r\n}\r\n\r\nSpinner.defaultProps = {\r\n  color: 'black',\r\n  size: '1.5rem',\r\n  isLoading: false,\r\n}\r\n\r\nexport default Spinner\r\n","import Spinner from './Spinner'\r\n\r\nexport default Spinner\r\n"],"sourceRoot":""}