{"version":3,"sources":["components/Fallback/index.js","components/Fallback/Fallback.js","routes.js","app.js","reportWebVitals.js","index.js","slices/helpers.js","utils/store.js","slices/app.slice.js","utils/const.js","slices/bills.slice.js","slices/clientBills.slice.js","components/FontIcon/FontIcon.js","components/FontIcon/index.js","components/Spinner/Spinner.js","components/Spinner/index.js","utils/firebase.js","utils/config.js"],"names":["Fallback","useEffect","NProgress","start","done","Auth","React","lazy","Dashboard","Router","dispatch","useDispatch","_useSelector","useSelector","state","app","checked","loggedIn","actions","authenticate","_jsx","HashRouter","children","Suspense","fallback","_jsxs","Switch","Route","path","dashboard","Redirect","to","className","Spinner","size","color","isLoading","App","loadFontIcons","Provider","store","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","calculateStatistics","clientBills","results","paid","leftToPay","sumOfValues","forEach","bill","value","configureStore","reducer","bills","middleware","_toConsumableArray","getDefaultMiddleware","slice","createSlice","name","initialState","me","reducers","setMe","action","_objectSpread","payload","setLoggedIn","auth","onAuthStateChanged","_asyncToGenerator","_regeneratorRuntime","mark","_callee","user","wrap","_context","prev","next","abrupt","firestore","collection","doc","uid","get","sent","emailVerified","exists","id","data","stop","_x","apply","arguments","signup","_ref2","fullName","email","password","Promise","_ref3","_callee2","resolve","reject","_yield$auth$createUse","_context2","createUserWithEmailAndPassword","sendEmailVerification","set","uuidv4","t0","_x2","_x3","login","_ref4","_ref5","_callee3","_yield$auth$signInWit","_context3","signInWithEmailAndPassword","Error","_x4","_x5","logout","_ref6","_callee4","_context4","signOut","_x6","_x7","resetPassword","sendPasswordResetEmail","profile","confirmEmail","dashboardPath","greeting","suppliers","addSupplier","editSupplier","clients","supplierBills","statistics","setSupplierBills","setIsLoading","updateSupplierBills","newBills","concat","removeSupplierBill","filter","updateTransaction","transaction","map","billID","transactions","removeTransaction","t","fetchSupplierBills","userId","_ref$showLoader","showLoader","supplierBillSnapshot","where","orderBy","docs","reduce","referencePoint","supplierTransactionsSnapshot","creationDate","moment","toDate","format","billDate","transactionDoc","transactionDate","Number","push","addTransaction","_ref4$description","description","transactionToAdd","reduxStore","Date","getState","addBill","billNumber","_ref7","billToAdd","_x8","deleteBill","_ref8","_ref9","_callee5","querySnapshot","_context5","ref","delete","_x9","_x10","deleteTransaction","_ref10","_ref11","_callee6","_context6","_x11","_x12","originalClientBills","setClientBills","updateClientBills","removeClientBill","fetchClientBills","clientBillSnapshot","FontIcon","style","FontAwesomeIcon","icon","defaultProps","library","add","faExclamationTriangle","faEnvelopeOpenText","faPaperPlane","others","_objectWithoutProperties","_excluded","ClipLoader","loading","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","analytics","storage","performance"],"mappings":"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","file":"static/js/main.dde9b9f6.chunk.js","sourcesContent":["import Fallback from './Fallback'\r\n\r\nexport default Fallback\r\n","import { useEffect } from 'react'\r\nimport NProgress from 'nprogress'\r\nimport 'nprogress/nprogress.css'\r\n\r\nconst Fallback = () => {\r\n  useEffect(() => {\r\n    NProgress.start()\r\n    return () => {\r\n      NProgress.done()\r\n    }\r\n  })\r\n\r\n  return ''\r\n}\r\n\r\nexport default Fallback\r\n","import React, { Suspense, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom'\r\nimport { actions } from 'slices/app.slice'\r\nimport { path } from 'utils/const'\r\nimport Fallback from 'components/Fallback'\r\nimport Spinner from 'components/Spinner'\r\n\r\nconst Auth = React.lazy(() => import('./pages/auth'))\r\nconst Dashboard = React.lazy(() => import('./pages/dashboard'))\r\n\r\nfunction Router() {\r\n  const dispatch = useDispatch()\r\n  const { checked, loggedIn } = useSelector((state) => state.app)\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.authenticate())\r\n  }, [])\r\n\r\n  if (!checked) {\r\n    return (\r\n      <div className=\"app-loader-container\">\r\n        <Spinner size=\"4rem\" color=\"white\" isLoading />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <HashRouter>\r\n      <Suspense fallback={<Fallback />}>\r\n        {!loggedIn ? (\r\n          <Switch>\r\n            <Route path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n            <Redirect to=\"/\" />\r\n          </Switch>\r\n        ) : (\r\n          <Switch>\r\n            <Route path={path.dashboard}>\r\n              <Dashboard />\r\n            </Route>\r\n            <Redirect to={path.dashboard} />\r\n          </Switch>\r\n        )}\r\n      </Suspense>\r\n    </HashRouter>\r\n  )\r\n}\r\n\r\nexport default Router\r\n","import { useEffect } from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { loadFontIcons } from 'components/FontIcon'\r\nimport store from 'utils/store'\r\nimport Router from './routes'\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    loadFontIcons()\r\n  }, [])\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <div data-testid=\"app\" className=\"app\">\r\n        <Router />\r\n      </div>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from 'app'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'primereact/resources/themes/lara-light-indigo/theme.css'\r\nimport 'primereact/resources/primereact.min.css'\r\nimport 'primeicons/primeicons.css'\r\nimport 'theme/reset.scss'\r\nimport 'react-modern-drawer/dist/index.css'\r\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n","export const calculateStatistics = (clientBills) => {\r\n  const results = {\r\n    paid: 0,\r\n    leftToPay: 0,\r\n    sumOfValues: 0,\r\n  }\r\n  clientBills.forEach((bill) => {\r\n    results.paid += bill.paid\r\n    results.leftToPay += bill.leftToPay\r\n    results.sumOfValues += bill.value\r\n  })\r\n  return results\r\n}\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport logger from 'redux-logger'\r\nimport app from 'slices/app.slice'\r\nimport bills from 'slices/bills.slice'\r\nimport clientBills from 'slices/clientBills.slice'\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    app,\r\n    bills,\r\n    clientBills,\r\n  },\r\n  middleware:\r\n    process.env.NODE_ENV === 'production'\r\n      ? [...getDefaultMiddleware()]\r\n      : [...getDefaultMiddleware(), logger],\r\n})\r\n\r\nexport default store\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { firestore, auth } from 'utils/firebase'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\n// ------------------------------------\r\n// State\r\n// ------------------------------------\r\n\r\nconst initialState = {\r\n  checked: false,\r\n  loggedIn: false,\r\n  me: {},\r\n}\r\n\r\n// ------------------------------------\r\n// Slices\r\n// -----------------------------------\r\n\r\nconst slice = createSlice({\r\n  name: 'app',\r\n  initialState,\r\n  reducers: {\r\n    setMe: (state, action) => ({\r\n      ...state,\r\n      me: action.payload.me,\r\n      loggedIn: action.payload.loggedIn,\r\n      checked: true,\r\n    }),\r\n    setLoggedIn: (state, action) => ({\r\n      ...state,\r\n      loggedIn: action.payload,\r\n    }),\r\n  },\r\n})\r\n\r\n// ------------------------------------\r\n// Actions\r\n// -----------------------------------\r\n\r\nexport const authenticate = () => (dispatch) => {\r\n  auth.onAuthStateChanged(async (me) => {\r\n    if (!me) {\r\n      return dispatch(\r\n        slice.actions.setMe({\r\n          loggedIn: false,\r\n          checked: true,\r\n          me: {},\r\n        }),\r\n      )\r\n    }\r\n\r\n    // get user from firestore\r\n    const user = await firestore.collection('users').doc(me?.uid).get()\r\n\r\n    // login\r\n    return dispatch(\r\n      slice.actions.setMe({\r\n        loggedIn: me?.emailVerified && user.exists,\r\n        me: user.exists\r\n          ? { id: me?.uid, emailVerified: me?.emailVerified, ...user.data() }\r\n          : {},\r\n        checked: true,\r\n      }),\r\n    )\r\n  })\r\n}\r\n\r\nconst signup =\r\n  ({ fullName, email, password }) =>\r\n  () =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        // create user\r\n        const { user } = await auth.createUserWithEmailAndPassword(\r\n          email,\r\n          password,\r\n        )\r\n\r\n        // send confirmation email\r\n        await user.sendEmailVerification()\r\n\r\n        // store user info in firestore\r\n        await firestore.collection('users').doc(user.uid).set({\r\n          id: uuidv4(),\r\n          fullName,\r\n          email,\r\n        })\r\n\r\n        resolve(user)\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n\r\nconst login =\r\n  ({ email, password }) =>\r\n  (dispatch) =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        const { user } = await auth.signInWithEmailAndPassword(email, password)\r\n        if (!user)\r\n          reject(new Error('Failed to login. please try it again later'))\r\n        if (!user.emailVerified) await user.sendEmailVerification()\r\n        dispatch(authenticate())\r\n        resolve(user)\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n\r\nconst logout = () => (dispatch) =>\r\n  new Promise(async (resolve, reject) => {\r\n    try {\r\n      await auth.signOut()\r\n      dispatch(\r\n        slice.actions.setMe({\r\n          checked: true,\r\n          loggedIn: false,\r\n          me: {},\r\n        }),\r\n      )\r\n      resolve()\r\n    } catch (err) {\r\n      reject(err)\r\n    }\r\n  })\r\n\r\nconst resetPassword = (email) => () => auth.sendPasswordResetEmail(email)\r\n\r\n// ------------------------------------\r\n// Exports\r\n// ------------------------------------\r\n\r\nexport const actions = {\r\n  ...slice.actions,\r\n  authenticate,\r\n  signup,\r\n  login,\r\n  logout,\r\n  resetPassword,\r\n}\r\n\r\nexport default slice.reducer\r\n","export const path = {\r\n  login: '/login',\r\n  signup: '/signup',\r\n  profile: '/profile',\r\n  resetPassword: '/reset-password',\r\n  confirmEmail: '/confirm-email',\r\n  dashboard: '/dashboard',\r\n}\r\n\r\nexport const dashboardPath = {\r\n  greeting: '/dashboard/greeting',\r\n  suppliers: '/dashboard/suppliers',\r\n  addSupplier: '/dashboard/suppliers/add',\r\n  editSupplier: '/dashboard/suppliers/:id/edit',\r\n  clients: '/dashboard/clients',\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport moment from 'moment'\r\nimport { firestore } from 'utils/firebase'\r\nimport store from 'utils/store'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { calculateStatistics } from './helpers'\r\n\r\n// ------------------------------------\r\n// State\r\n// ------------------------------------\r\n\r\nconst initialState = {\r\n  supplierBills: [],\r\n  statistics: {\r\n    paid: 0,\r\n    leftToPay: 0,\r\n    sumOfValues: 0,\r\n  },\r\n  isLoading: false,\r\n}\r\n\r\n// ------------------------------------\r\n// Slices\r\n// -----------------------------------\r\n\r\nconst slice = createSlice({\r\n  name: 'bills',\r\n  initialState,\r\n  reducers: {\r\n    setSupplierBills: (state, action) => ({\r\n      ...state,\r\n      statistics: action.payload.statistics,\r\n      supplierBills: action.payload.supplierBills,\r\n    }),\r\n    setIsLoading: (state, action) => ({\r\n      ...state,\r\n      isLoading: action.payload.isLoading,\r\n    }),\r\n    updateSupplierBills: (state, action) => {\r\n      const newBills = [action.payload.bill].concat(state.supplierBills)\r\n      const statistics = calculateStatistics(newBills)\r\n      return {\r\n        ...state,\r\n        statistics,\r\n        supplierBills: newBills,\r\n      }\r\n    },\r\n    removeSupplierBill: (state, action) => {\r\n      const newBills = state.supplierBills.filter(\r\n        (bill) => bill.id !== action.payload.id,\r\n      )\r\n      const statistics = calculateStatistics(newBills)\r\n      return {\r\n        ...state,\r\n        statistics,\r\n        supplierBills: newBills,\r\n      }\r\n    },\r\n    updateTransaction: (state, action) => {\r\n      const { transaction } = action.payload\r\n\r\n      const newBills = state.supplierBills.map((bill) => {\r\n        if (bill.id === transaction.billID) {\r\n          const paid = transaction.value + bill.paid\r\n          const leftToPay = bill.leftToPay - transaction.value\r\n\r\n          return {\r\n            ...bill,\r\n            paid,\r\n            leftToPay,\r\n            transactions: [transaction].concat(bill.transactions),\r\n          }\r\n        }\r\n        return bill\r\n      })\r\n      const statistics = calculateStatistics(newBills)\r\n      return {\r\n        ...state,\r\n        statistics,\r\n        supplierBills: newBills,\r\n      }\r\n    },\r\n    removeTransaction: (state, action) => {\r\n      const { transaction } = action.payload\r\n\r\n      const newBills = state.supplierBills.map((bill) => {\r\n        if (bill.id === transaction.billID) {\r\n          const paid = bill.paid - transaction.value\r\n          const leftToPay = bill.leftToPay + transaction.value\r\n\r\n          return {\r\n            ...bill,\r\n            paid,\r\n            leftToPay,\r\n            transactions: bill.transactions.filter(\r\n              (t) => t.id !== transaction.id,\r\n            ),\r\n          }\r\n        }\r\n        return bill\r\n      })\r\n      const statistics = calculateStatistics(newBills)\r\n      return {\r\n        ...state,\r\n        statistics,\r\n        supplierBills: newBills,\r\n      }\r\n    },\r\n  },\r\n})\r\n\r\n// ------------------------------------\r\n// Actions\r\n// -----------------------------------\r\n\r\nconst fetchSupplierBills =\r\n  ({ userId, showLoader = true }) =>\r\n  (dispatch) =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        if (showLoader) {\r\n          dispatch(slice.actions.setIsLoading({ isLoading: true }))\r\n        }\r\n        const bills = []\r\n        const supplierBillSnapshot = await firestore\r\n          .collection('supplierBill')\r\n          .where('userId', '==', userId)\r\n          .orderBy('billDate', 'desc')\r\n          .get()\r\n\r\n        await supplierBillSnapshot.docs.reduce(async (referencePoint, doc) => {\r\n          // Check for execution status of previous iteration, i.e. wait for it to get finished\r\n          await referencePoint\r\n          const document = doc.data()\r\n\r\n          const supplierTransactionsSnapshot = await firestore\r\n            .collection('transactions')\r\n            .where('billID', '==', document.id)\r\n            .orderBy('transactionDate', 'desc')\r\n            .get()\r\n\r\n          document.transactions = []\r\n          document.paid = 0\r\n          document.leftToPay = document.value\r\n\r\n          document.creationDate = moment(document.creationDate.toDate()).format(\r\n            'DD/MM/YYYY',\r\n          )\r\n          document.billDate = moment(document.billDate.toDate()).format(\r\n            'DD/MM/YYYY',\r\n          )\r\n\r\n          supplierTransactionsSnapshot.docs.forEach((transactionDoc) => {\r\n            const transaction = transactionDoc.data()\r\n            transaction.creationDate = moment(\r\n              transaction.creationDate.toDate(),\r\n            ).format('DD/MM/YYYY')\r\n            transaction.transactionDate = moment(\r\n              transaction.transactionDate.toDate(),\r\n            ).format('DD/MM/YYYY')\r\n\r\n            document.paid += Number(transaction.value)\r\n            document.leftToPay -= Number(transaction.value)\r\n            document.transactions.push(transaction)\r\n          })\r\n          bills.push(document)\r\n        }, Promise.resolve())\r\n        const statistics = calculateStatistics(bills)\r\n        dispatch(\r\n          slice.actions.setSupplierBills({ supplierBills: bills, statistics }),\r\n        )\r\n        if (showLoader) {\r\n          dispatch(slice.actions.setIsLoading({ isLoading: false }))\r\n        }\r\n        resolve()\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n\r\nconst addTransaction =\r\n  ({ billID, transactionDate, value, description = '' }) =>\r\n  (dispatch) =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        const id = uuidv4()\r\n        // store user info in firestore\r\n        await firestore\r\n          .collection('transactions')\r\n          .doc(id)\r\n          .set({\r\n            id,\r\n            billID,\r\n            transactionDate,\r\n            creationDate: new Date(),\r\n            value: Number(value),\r\n            description,\r\n          })\r\n        const transaction = await firestore\r\n          .collection('transactions')\r\n          .doc(id)\r\n          .get()\r\n        const transactionToAdd = transaction.data()\r\n        transactionToAdd.creationDate = moment(\r\n          transactionToAdd.creationDate.toDate(),\r\n        ).format('DD/MM/YYYY')\r\n        transactionToAdd.transactionDate = moment(\r\n          transactionToAdd.transactionDate.toDate(),\r\n        ).format('DD/MM/YYYY')\r\n\r\n        const reduxStore = store.getState()\r\n        const { me } = reduxStore.app\r\n\r\n        await dispatch(fetchSupplierBills({ userId: me.id, showLoader: false }))\r\n\r\n        resolve(transactionToAdd)\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n\r\nconst addBill =\r\n  ({ billNumber, billDate, name, value, userId }) =>\r\n  (dispatch) =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        const id = uuidv4()\r\n        // store user info in firestore\r\n        await firestore\r\n          .collection('supplierBill')\r\n          .doc(id)\r\n          .set({\r\n            id,\r\n            billNumber,\r\n            billDate,\r\n            name,\r\n            creationDate: new Date(),\r\n            value: Number(value),\r\n            userId,\r\n          })\r\n        const bill = await firestore.collection('supplierBill').doc(id).get()\r\n        const billToAdd = bill.data()\r\n        billToAdd.creationDate = moment(billToAdd.creationDate.toDate()).format(\r\n          'DD/MM/YYYY',\r\n        )\r\n        billToAdd.billDate = moment(billToAdd.billDate.toDate()).format(\r\n          'DD/MM/YYYY',\r\n        )\r\n        billToAdd.paid = 0\r\n        billToAdd.leftToPay = Number(value)\r\n        billToAdd.transactions = []\r\n        const reduxStore = store.getState()\r\n        const { me } = reduxStore.app\r\n\r\n        await dispatch(fetchSupplierBills({ userId: me.id, showLoader: false }))\r\n\r\n        resolve(billToAdd)\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n\r\nconst deleteBill =\r\n  ({ id }) =>\r\n  (dispatch) =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        // store user info in firestore\r\n        const querySnapshot = await firestore\r\n          .collection('supplierBill')\r\n          .where('id', '==', id)\r\n          .get()\r\n        const transactionsSnapshot = await firestore\r\n          .collection('transactions')\r\n          .where('billID', '==', id)\r\n          .get()\r\n        transactionsSnapshot.docs.forEach((transaction) => {\r\n          transaction.ref.delete()\r\n        })\r\n        querySnapshot.docs[0].ref.delete()\r\n        dispatch(slice.actions.removeSupplierBill({ id }))\r\n\r\n        resolve()\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n\r\nconst deleteTransaction =\r\n  ({ transaction }) =>\r\n  (dispatch) =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        // store user info in firestore\r\n        const querySnapshot = await firestore\r\n          .collection('transactions')\r\n          .where('id', '==', transaction.id)\r\n          .get()\r\n\r\n        querySnapshot.docs[0].ref.delete()\r\n        dispatch(slice.actions.removeTransaction({ transaction }))\r\n\r\n        resolve()\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n// ------------------------------------\r\n// Exports\r\n// ------------------------------------\r\n\r\nexport const actions = {\r\n  ...slice.actions,\r\n  fetchSupplierBills,\r\n  addTransaction,\r\n  addBill,\r\n  deleteBill,\r\n  deleteTransaction,\r\n}\r\n\r\nexport default slice.reducer\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport moment from 'moment'\r\nimport { firestore } from 'utils/firebase'\r\nimport store from 'utils/store'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { calculateStatistics } from './helpers'\r\n\r\n// ------------------------------------\r\n// State\r\n// ------------------------------------\r\n\r\nconst initialState = {\r\n  originalClientBills: [],\r\n  clientBills: [],\r\n  statistics: {\r\n    paid: 0,\r\n    leftToPay: 0,\r\n    sumOfValues: 0,\r\n  },\r\n  isLoading: false,\r\n}\r\n\r\n// ------------------------------------\r\n// Slices\r\n// -----------------------------------\r\n\r\nconst slice = createSlice({\r\n  name: 'bills',\r\n  initialState,\r\n  reducers: {\r\n    setClientBills: (state, action) => ({\r\n      ...state,\r\n      statistics: action.payload.statistics,\r\n      clientBills: action.payload.clientBills,\r\n    }),\r\n    setIsLoading: (state, action) => ({\r\n      ...state,\r\n      isLoading: action.payload.isLoading,\r\n    }),\r\n    updateClientBills: (state, action) => {\r\n      const newBills = [action.payload.bill].concat(state.clientBills)\r\n      const statistics = calculateStatistics(newBills)\r\n      return {\r\n        ...state,\r\n        statistics,\r\n        clientBills: newBills,\r\n      }\r\n    },\r\n    removeClientBill: (state, action) => {\r\n      const newBills = state.clientBills.filter(\r\n        (bill) => bill.id !== action.payload.id,\r\n      )\r\n      const statistics = calculateStatistics(newBills)\r\n      return {\r\n        ...state,\r\n        statistics,\r\n        clientBills: newBills,\r\n      }\r\n    },\r\n    updateTransaction: (state, action) => {\r\n      const { transaction } = action.payload\r\n\r\n      const newBills = state.clientBills.map((bill) => {\r\n        if (bill.id === transaction.billID) {\r\n          const paid = transaction.value + bill.paid\r\n          const leftToPay = bill.leftToPay - transaction.value\r\n\r\n          return {\r\n            ...bill,\r\n            paid,\r\n            leftToPay,\r\n            transactions: [transaction].concat(bill.transactions),\r\n          }\r\n        }\r\n        return bill\r\n      })\r\n      const statistics = calculateStatistics(newBills)\r\n      return {\r\n        ...state,\r\n        statistics,\r\n        clientBills: newBills,\r\n      }\r\n    },\r\n    removeTransaction: (state, action) => {\r\n      const { transaction } = action.payload\r\n\r\n      const newBills = state.clientBills.map((bill) => {\r\n        if (bill.id === transaction.billID) {\r\n          const paid = bill.paid - transaction.value\r\n          const leftToPay = bill.leftToPay + transaction.value\r\n\r\n          return {\r\n            ...bill,\r\n            paid,\r\n            leftToPay,\r\n            transactions: bill.transactions.filter(\r\n              (t) => t.id !== transaction.id,\r\n            ),\r\n          }\r\n        }\r\n        return bill\r\n      })\r\n      const statistics = calculateStatistics(newBills)\r\n      return {\r\n        ...state,\r\n        statistics,\r\n        clientBills: newBills,\r\n      }\r\n    },\r\n  },\r\n})\r\n\r\n// ------------------------------------\r\n// Actions\r\n// -----------------------------------\r\n\r\nconst fetchClientBills =\r\n  ({ userId, showLoader = true }) =>\r\n  (dispatch) =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        if (showLoader) {\r\n          dispatch(slice.actions.setIsLoading({ isLoading: true }))\r\n        }\r\n        const bills = []\r\n        const clientBillSnapshot = await firestore\r\n          .collection('clientBill')\r\n          .where('userId', '==', userId)\r\n          .orderBy('billDate', 'desc')\r\n          .get()\r\n\r\n        await clientBillSnapshot.docs.reduce(async (referencePoint, doc) => {\r\n          // Check for execution status of previous iteration, i.e. wait for it to get finished\r\n          await referencePoint\r\n          const document = doc.data()\r\n\r\n          const supplierTransactionsSnapshot = await firestore\r\n            .collection('transactions')\r\n            .where('billID', '==', document.id)\r\n            .orderBy('transactionDate', 'desc')\r\n            .get()\r\n\r\n          document.transactions = []\r\n          document.paid = 0\r\n          document.leftToPay = document.value\r\n\r\n          document.creationDate = moment(document.creationDate.toDate()).format(\r\n            'DD/MM/YYYY',\r\n          )\r\n          document.billDate = moment(document.billDate.toDate()).format(\r\n            'DD/MM/YYYY',\r\n          )\r\n\r\n          supplierTransactionsSnapshot.docs.forEach((transactionDoc) => {\r\n            const transaction = transactionDoc.data()\r\n            transaction.creationDate = moment(\r\n              transaction.creationDate.toDate(),\r\n            ).format('DD/MM/YYYY')\r\n            transaction.transactionDate = moment(\r\n              transaction.transactionDate.toDate(),\r\n            ).format('DD/MM/YYYY')\r\n\r\n            document.paid += Number(transaction.value)\r\n            document.leftToPay -= Number(transaction.value)\r\n            document.transactions.push(transaction)\r\n          })\r\n          bills.push(document)\r\n        }, Promise.resolve())\r\n        const statistics = calculateStatistics(bills)\r\n        await dispatch(\r\n          slice.actions.setClientBills({ clientBills: bills, statistics }),\r\n        )\r\n        if (showLoader) {\r\n          dispatch(slice.actions.setIsLoading({ isLoading: false }))\r\n        }\r\n\r\n        resolve({ bills, statistics })\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n\r\nconst addTransaction =\r\n  ({ billID, transactionDate, value, description = '' }) =>\r\n  (dispatch) =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        const id = uuidv4()\r\n        // store user info in firestore\r\n        await firestore\r\n          .collection('transactions')\r\n          .doc(id)\r\n          .set({\r\n            id,\r\n            billID,\r\n            transactionDate,\r\n            creationDate: new Date(),\r\n            value: Number(value),\r\n            description,\r\n          })\r\n        const transaction = await firestore\r\n          .collection('transactions')\r\n          .doc(id)\r\n          .get()\r\n        const transactionToAdd = transaction.data()\r\n        transactionToAdd.creationDate = moment(\r\n          transactionToAdd.creationDate.toDate(),\r\n        ).format('DD/MM/YYYY')\r\n        transactionToAdd.transactionDate = moment(\r\n          transactionToAdd.transactionDate.toDate(),\r\n        ).format('DD/MM/YYYY')\r\n\r\n        const reduxStore = store.getState()\r\n        const { me } = reduxStore.app\r\n\r\n        await dispatch(fetchClientBills({ userId: me.id, showLoader: false }))\r\n\r\n        resolve(transactionToAdd)\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n\r\nconst addBill =\r\n  ({ billNumber, billDate, name, value, userId }) =>\r\n  (dispatch) =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        const id = uuidv4()\r\n        // store user info in firestore\r\n        await firestore\r\n          .collection('clientBill')\r\n          .doc(id)\r\n          .set({\r\n            id,\r\n            billNumber,\r\n            billDate,\r\n            name,\r\n            creationDate: new Date(),\r\n            value: Number(value),\r\n            userId,\r\n          })\r\n        const bill = await firestore.collection('clientBill').doc(id).get()\r\n        const billToAdd = bill.data()\r\n        billToAdd.creationDate = moment(billToAdd.creationDate.toDate()).format(\r\n          'DD/MM/YYYY',\r\n        )\r\n        billToAdd.billDate = moment(billToAdd.billDate.toDate()).format(\r\n          'DD/MM/YYYY',\r\n        )\r\n        billToAdd.paid = 0\r\n        billToAdd.leftToPay = Number(value)\r\n        billToAdd.transactions = []\r\n        const reduxStore = store.getState()\r\n        const { me } = reduxStore.app\r\n\r\n        await dispatch(fetchClientBills({ userId: me.id, showLoader: false }))\r\n\r\n        resolve(billToAdd)\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n\r\nconst deleteBill =\r\n  ({ id }) =>\r\n  (dispatch) =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        // store user info in firestore\r\n        const querySnapshot = await firestore\r\n          .collection('clientBill')\r\n          .where('id', '==', id)\r\n          .get()\r\n        const transactionsSnapshot = await firestore\r\n          .collection('transactions')\r\n          .where('billID', '==', id)\r\n          .get()\r\n        transactionsSnapshot.docs.forEach((transaction) => {\r\n          transaction.ref.delete()\r\n        })\r\n        querySnapshot.docs[0].ref.delete()\r\n        dispatch(slice.actions.removeClientBill({ id }))\r\n\r\n        resolve()\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n\r\nconst deleteTransaction =\r\n  ({ transaction }) =>\r\n  (dispatch) =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        // store user info in firestore\r\n        const querySnapshot = await firestore\r\n          .collection('transactions')\r\n          .where('id', '==', transaction.id)\r\n          .get()\r\n\r\n        querySnapshot.docs[0].ref.delete()\r\n        dispatch(slice.actions.removeTransaction({ transaction }))\r\n\r\n        resolve()\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n// ------------------------------------\r\n// Exports\r\n// ------------------------------------\r\n\r\nexport const actions = {\r\n  ...slice.actions,\r\n  fetchClientBills,\r\n  addTransaction,\r\n  addBill,\r\n  deleteBill,\r\n  deleteTransaction,\r\n}\r\n\r\nexport default slice.reducer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport {\r\n  faExclamationTriangle,\r\n  faEnvelopeOpenText,\r\n  faPaperPlane,\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\n// TODO: add icons here...\r\nexport const loadFontIcons = () =>\r\n  library.add(faExclamationTriangle, faEnvelopeOpenText, faPaperPlane)\r\n\r\nconst FontIcon = ({ name, className, style }) => (\r\n  <FontAwesomeIcon icon={name} className={className} style={style} />\r\n)\r\n\r\nFontIcon.propTypes = {\r\n  name: PropTypes.string,\r\n  className: PropTypes.string,\r\n  style: PropTypes.objectOf(PropTypes.object),\r\n}\r\n\r\nFontIcon.defaultProps = {\r\n  name: '',\r\n  className: '',\r\n  style: {},\r\n}\r\n\r\nexport default FontIcon\r\n","import FontIcon, { loadFontIcons as load } from './FontIcon'\r\n\r\nexport const loadFontIcons = load\r\n\r\nexport default FontIcon\r\n","import { ClipLoader } from 'react-spinners'\r\nimport { PropTypes } from 'prop-types'\r\n\r\n/**\r\n * types of spinners\r\n * https://www.davidhu.io/react-spinners/\r\n *\r\n * github\r\n * https://github.com/davidhu2000/react-spinners\r\n */\r\n\r\nconst Spinner = ({ color, size, isLoading, ...others }) => (\r\n  <ClipLoader color={color} size={size} loading={isLoading} {...others} />\r\n)\r\n\r\nSpinner.propTypes = {\r\n  color: PropTypes.string,\r\n  size: PropTypes.string,\r\n  isLoading: PropTypes.bool,\r\n}\r\n\r\nSpinner.defaultProps = {\r\n  color: 'black',\r\n  size: '1.5rem',\r\n  isLoading: false,\r\n}\r\n\r\nexport default Spinner\r\n","import Spinner from './Spinner'\r\n\r\nexport default Spinner\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\nimport 'firebase/storage'\r\nimport 'firebase/performance'\r\nimport 'firebase/analytics'\r\nimport config from './config'\r\n\r\nfirebase.initializeApp(config.firebase)\r\nfirebase.analytics()\r\n\r\nexport const auth = firebase.auth()\r\nexport const storage = firebase.storage().ref()\r\nexport const performance = firebase.performance()\r\nexport const firestore = firebase.firestore()\r\n\r\nexport default firebase\r\n","export default {\r\n  firebase: {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  },\r\n}\r\n"],"sourceRoot":""}