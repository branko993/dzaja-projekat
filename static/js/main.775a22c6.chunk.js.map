{"version":3,"sources":["utils/store.js","components/Fallback/index.js","components/Fallback/Fallback.js","routes.js","app.js","reportWebVitals.js","index.js","slices/app.slice.js","utils/const.js","slices/bills.slice.js","components/FontIcon/FontIcon.js","components/FontIcon/index.js","slices/clientBills.slice.js","components/Spinner/Spinner.js","components/Spinner/index.js","utils/firebase.js","utils/config.js"],"names":["store","configureStore","reducer","app","bills","clientBills","middleware","_toConsumableArray","getDefaultMiddleware","Fallback","useEffect","NProgress","start","done","Auth","React","lazy","Dashboard","Router","dispatch","useDispatch","_useSelector","useSelector","state","checked","loggedIn","actions","authenticate","_jsx","HashRouter","children","Suspense","fallback","_jsxs","Switch","Route","path","dashboard","Redirect","to","className","Spinner","size","color","isLoading","App","loadFontIcons","Provider","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","slice","createSlice","name","initialState","me","reducers","setMe","action","_objectSpread","payload","setLoggedIn","auth","onAuthStateChanged","_asyncToGenerator","_regeneratorRuntime","mark","_callee","user","wrap","_context","prev","next","abrupt","firestore","collection","doc","uid","get","sent","emailVerified","exists","id","data","stop","_x","apply","arguments","signup","_ref2","fullName","email","password","Promise","_ref3","_callee2","resolve","reject","_yield$auth$createUse","_context2","createUserWithEmailAndPassword","sendEmailVerification","set","uuidv4","t0","_x2","_x3","login","_ref4","_ref5","_callee3","_yield$auth$signInWit","_context3","signInWithEmailAndPassword","Error","_x4","_x5","logout","_ref6","_callee4","_context4","signOut","_x6","_x7","resetPassword","sendPasswordResetEmail","profile","confirmEmail","dashboardPath","greeting","suppliers","addSupplier","editSupplier","customers","calculateStatistics","supplierBills","results","paid","leftToPay","sumOfValues","forEach","bill","value","statistics","setSupplierBills","updateSupplierBills","newBills","concat","removeSupplierBill","filter","updateTransaction","transaction","map","billID","transactions","removeTransaction","t","fetchSupplierBills","userId","supplierBillSnapshot","where","orderBy","docs","reduce","referencePoint","supplierTransactionsSnapshot","creationDate","moment","toDate","format","billDate","transactionDoc","transactionDate","Number","push","addTransaction","transactionToAdd","Date","addBill","billNumber","_ref7","billToAdd","_x8","deleteBill","_ref8","_ref9","_callee5","querySnapshot","_context5","ref","delete","_x9","_x10","deleteTransaction","_ref10","_ref11","_callee6","_context6","_x11","_x12","FontIcon","style","FontAwesomeIcon","icon","defaultProps","library","add","faExclamationTriangle","faEnvelopeOpenText","faPaperPlane","setClientBills","updateClientBills","removeClientBill","fetchClientBills","clientBillsnapshot","others","_objectWithoutProperties","_excluded","ClipLoader","loading","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","analytics","storage","performance"],"mappings":"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","file":"static/js/main.775a22c6.chunk.js","sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport logger from 'redux-logger'\r\nimport app from 'slices/app.slice'\r\nimport bills from 'slices/bills.slice'\r\nimport clientBills from 'slices/clientBills.slice'\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    app,\r\n    bills,\r\n    clientBills,\r\n  },\r\n  middleware:\r\n    process.env.NODE_ENV === 'production'\r\n      ? [...getDefaultMiddleware()]\r\n      : [...getDefaultMiddleware(), logger],\r\n})\r\n\r\nexport default store\r\n","import Fallback from './Fallback'\r\n\r\nexport default Fallback\r\n","import { useEffect } from 'react'\r\nimport NProgress from 'nprogress'\r\nimport 'nprogress/nprogress.css'\r\n\r\nconst Fallback = () => {\r\n  useEffect(() => {\r\n    NProgress.start()\r\n    return () => {\r\n      NProgress.done()\r\n    }\r\n  })\r\n\r\n  return ''\r\n}\r\n\r\nexport default Fallback\r\n","import React, { Suspense, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom'\r\nimport { actions } from 'slices/app.slice'\r\nimport { path } from 'utils/const'\r\nimport Fallback from 'components/Fallback'\r\nimport Spinner from 'components/Spinner'\r\n\r\nconst Auth = React.lazy(() => import('./pages/auth'))\r\nconst Dashboard = React.lazy(() => import('./pages/dashboard'))\r\n\r\nfunction Router() {\r\n  const dispatch = useDispatch()\r\n  const { checked, loggedIn } = useSelector((state) => state.app)\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.authenticate())\r\n  }, [])\r\n\r\n  if (!checked) {\r\n    return (\r\n      <div className=\"app-loader-container\">\r\n        <Spinner size=\"4rem\" color=\"white\" isLoading />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <HashRouter>\r\n      <Suspense fallback={<Fallback />}>\r\n        {!loggedIn ? (\r\n          <Switch>\r\n            <Route path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n            <Redirect to=\"/\" />\r\n          </Switch>\r\n        ) : (\r\n          <Switch>\r\n            <Route path={path.dashboard}>\r\n              <Dashboard />\r\n            </Route>\r\n            <Redirect to={path.dashboard} />\r\n          </Switch>\r\n        )}\r\n      </Suspense>\r\n    </HashRouter>\r\n  )\r\n}\r\n\r\nexport default Router\r\n","import { useEffect } from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { loadFontIcons } from 'components/FontIcon'\r\nimport store from 'utils/store'\r\nimport Router from './routes'\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    loadFontIcons()\r\n  }, [])\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <div data-testid=\"app\" className=\"app\">\r\n        <Router />\r\n      </div>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from 'app'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'primereact/resources/themes/lara-light-indigo/theme.css'\r\nimport 'primereact/resources/primereact.min.css'\r\nimport 'primeicons/primeicons.css'\r\nimport 'theme/reset.scss'\r\nimport 'react-modern-drawer/dist/index.css'\r\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { firestore, auth } from 'utils/firebase'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\n// ------------------------------------\r\n// State\r\n// ------------------------------------\r\n\r\nconst initialState = {\r\n  checked: false,\r\n  loggedIn: false,\r\n  me: {},\r\n}\r\n\r\n// ------------------------------------\r\n// Slices\r\n// -----------------------------------\r\n\r\nconst slice = createSlice({\r\n  name: 'app',\r\n  initialState,\r\n  reducers: {\r\n    setMe: (state, action) => ({\r\n      ...state,\r\n      me: action.payload.me,\r\n      loggedIn: action.payload.loggedIn,\r\n      checked: true,\r\n    }),\r\n    setLoggedIn: (state, action) => ({\r\n      ...state,\r\n      loggedIn: action.payload,\r\n    }),\r\n  },\r\n})\r\n\r\n// ------------------------------------\r\n// Actions\r\n// -----------------------------------\r\n\r\nexport const authenticate = () => (dispatch) => {\r\n  auth.onAuthStateChanged(async (me) => {\r\n    if (!me) {\r\n      return dispatch(\r\n        slice.actions.setMe({\r\n          loggedIn: false,\r\n          checked: true,\r\n          me: {},\r\n        }),\r\n      )\r\n    }\r\n\r\n    // get user from firestore\r\n    const user = await firestore.collection('users').doc(me?.uid).get()\r\n\r\n    // login\r\n    return dispatch(\r\n      slice.actions.setMe({\r\n        loggedIn: me?.emailVerified && user.exists,\r\n        me: user.exists\r\n          ? { id: me?.uid, emailVerified: me?.emailVerified, ...user.data() }\r\n          : {},\r\n        checked: true,\r\n      }),\r\n    )\r\n  })\r\n}\r\n\r\nconst signup =\r\n  ({ fullName, email, password }) =>\r\n  () =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        // create user\r\n        const { user } = await auth.createUserWithEmailAndPassword(\r\n          email,\r\n          password,\r\n        )\r\n\r\n        // send confirmation email\r\n        await user.sendEmailVerification()\r\n\r\n        // store user info in firestore\r\n        await firestore.collection('users').doc(user.uid).set({\r\n          id: uuidv4(),\r\n          fullName,\r\n          email,\r\n        })\r\n\r\n        resolve(user)\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n\r\nconst login =\r\n  ({ email, password }) =>\r\n  (dispatch) =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        const { user } = await auth.signInWithEmailAndPassword(email, password)\r\n        if (!user)\r\n          reject(new Error('Failed to login. please try it again later'))\r\n        if (!user.emailVerified) await user.sendEmailVerification()\r\n        dispatch(authenticate())\r\n        resolve(user)\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n\r\nconst logout = () => (dispatch) =>\r\n  new Promise(async (resolve, reject) => {\r\n    try {\r\n      await auth.signOut()\r\n      dispatch(\r\n        slice.actions.setMe({\r\n          checked: true,\r\n          loggedIn: false,\r\n          me: {},\r\n        }),\r\n      )\r\n      resolve()\r\n    } catch (err) {\r\n      reject(err)\r\n    }\r\n  })\r\n\r\nconst resetPassword = (email) => () => auth.sendPasswordResetEmail(email)\r\n\r\n// ------------------------------------\r\n// Exports\r\n// ------------------------------------\r\n\r\nexport const actions = {\r\n  ...slice.actions,\r\n  authenticate,\r\n  signup,\r\n  login,\r\n  logout,\r\n  resetPassword,\r\n}\r\n\r\nexport default slice.reducer\r\n","export const path = {\r\n  login: '/login',\r\n  signup: '/signup',\r\n  profile: '/profile',\r\n  resetPassword: '/reset-password',\r\n  confirmEmail: '/confirm-email',\r\n  dashboard: '/dashboard',\r\n}\r\n\r\nexport const dashboardPath = {\r\n  greeting: '/dashboard/greeting',\r\n  suppliers: '/dashboard/suppliers',\r\n  addSupplier: '/dashboard/suppliers/add',\r\n  editSupplier: '/dashboard/suppliers/:id/edit',\r\n  customers: '/dashboard/customers',\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport moment from 'moment'\r\nimport { firestore } from 'utils/firebase'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\n// ------------------------------------\r\n// Helpers\r\n// ------------------------------------\r\n\r\nconst calculateStatistics = (supplierBills) => {\r\n  const results = {\r\n    paid: 0,\r\n    leftToPay: 0,\r\n    sumOfValues: 0,\r\n  }\r\n  supplierBills.forEach((bill) => {\r\n    results.paid += bill.paid\r\n    results.leftToPay += bill.leftToPay\r\n    results.sumOfValues += bill.value\r\n  })\r\n  return results\r\n}\r\n\r\n// ------------------------------------\r\n// State\r\n// ------------------------------------\r\n\r\nconst initialState = {\r\n  supplierBills: [],\r\n  statistics: {\r\n    paid: 0,\r\n    leftToPay: 0,\r\n    sumOfValues: 0,\r\n  },\r\n}\r\n\r\n// ------------------------------------\r\n// Slices\r\n// -----------------------------------\r\n\r\nconst slice = createSlice({\r\n  name: 'bills',\r\n  initialState,\r\n  reducers: {\r\n    setSupplierBills: (state, action) => ({\r\n      ...state,\r\n      statistics: action.payload.statistics,\r\n      supplierBills: action.payload.supplierBills,\r\n    }),\r\n    updateSupplierBills: (state, action) => {\r\n      const newBills = [action.payload.bill].concat(state.supplierBills)\r\n      const statistics = calculateStatistics(newBills)\r\n      return {\r\n        ...state,\r\n        statistics,\r\n        supplierBills: newBills,\r\n      }\r\n    },\r\n    removeSupplierBill: (state, action) => {\r\n      const newBills = state.supplierBills.filter(\r\n        (bill) => bill.id !== action.payload.id,\r\n      )\r\n      const statistics = calculateStatistics(newBills)\r\n      return {\r\n        ...state,\r\n        statistics,\r\n        supplierBills: newBills,\r\n      }\r\n    },\r\n    updateTransaction: (state, action) => {\r\n      const { transaction } = action.payload\r\n\r\n      const newBills = state.supplierBills.map((bill) => {\r\n        if (bill.id === transaction.billID) {\r\n          const paid = transaction.value + bill.paid\r\n          const leftToPay = bill.leftToPay - transaction.value\r\n\r\n          return {\r\n            ...bill,\r\n            paid,\r\n            leftToPay,\r\n            transactions: [transaction].concat(bill.transactions),\r\n          }\r\n        }\r\n        return bill\r\n      })\r\n      const statistics = calculateStatistics(newBills)\r\n      return {\r\n        ...state,\r\n        statistics,\r\n        supplierBills: newBills,\r\n      }\r\n    },\r\n    removeTransaction: (state, action) => {\r\n      const { transaction } = action.payload\r\n\r\n      const newBills = state.supplierBills.map((bill) => {\r\n        if (bill.id === transaction.billID) {\r\n          const paid = bill.paid - transaction.value\r\n          const leftToPay = bill.leftToPay + transaction.value\r\n\r\n          return {\r\n            ...bill,\r\n            paid,\r\n            leftToPay,\r\n            transactions: bill.transactions.filter(\r\n              (t) => t.id !== transaction.id,\r\n            ),\r\n          }\r\n        }\r\n        return bill\r\n      })\r\n      const statistics = calculateStatistics(newBills)\r\n      return {\r\n        ...state,\r\n        statistics,\r\n        supplierBills: newBills,\r\n      }\r\n    },\r\n  },\r\n})\r\n\r\n// ------------------------------------\r\n// Actions\r\n// -----------------------------------\r\n\r\nconst fetchSupplierBills =\r\n  ({ userId }) =>\r\n  (dispatch) =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        const bills = []\r\n        const supplierBillSnapshot = await firestore\r\n          .collection('supplierBill')\r\n          .where('userId', '==', userId)\r\n          .orderBy('creationDate', 'desc')\r\n          .get()\r\n\r\n        await supplierBillSnapshot.docs.reduce(async (referencePoint, doc) => {\r\n          // Check for execution status of previous iteration, i.e. wait for it to get finished\r\n          await referencePoint\r\n          const document = doc.data()\r\n\r\n          const supplierTransactionsSnapshot = await firestore\r\n            .collection('transactions')\r\n            .where('billID', '==', document.id)\r\n            .orderBy('creationDate', 'desc')\r\n            .get()\r\n\r\n          document.transactions = []\r\n          document.paid = 0\r\n          document.leftToPay = document.value\r\n\r\n          document.creationDate = moment(document.creationDate.toDate()).format(\r\n            'DD/MM/YYYY',\r\n          )\r\n          document.billDate = moment(document.billDate.toDate()).format(\r\n            'DD/MM/YYYY',\r\n          )\r\n\r\n          supplierTransactionsSnapshot.docs.forEach((transactionDoc) => {\r\n            const transaction = transactionDoc.data()\r\n            transaction.creationDate = moment(\r\n              transaction.creationDate.toDate(),\r\n            ).format('DD/MM/YYYY')\r\n            transaction.transactionDate = moment(\r\n              transaction.transactionDate.toDate(),\r\n            ).format('DD/MM/YYYY')\r\n\r\n            document.paid += Number(transaction.value)\r\n            document.leftToPay -= Number(transaction.value)\r\n            document.transactions.push(transaction)\r\n          })\r\n          bills.push(document)\r\n        }, Promise.resolve())\r\n        const statistics = calculateStatistics(bills)\r\n        dispatch(\r\n          slice.actions.setSupplierBills({ supplierBills: bills, statistics }),\r\n        )\r\n\r\n        resolve()\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n\r\nconst addTransaction =\r\n  ({ billID, transactionDate, value }) =>\r\n  (dispatch) =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        const id = uuidv4()\r\n        // store user info in firestore\r\n        await firestore\r\n          .collection('transactions')\r\n          .doc(id)\r\n          .set({\r\n            id,\r\n            billID,\r\n            transactionDate,\r\n            creationDate: new Date(),\r\n            value: Number(value),\r\n          })\r\n        const transaction = await firestore\r\n          .collection('transactions')\r\n          .doc(id)\r\n          .get()\r\n        const transactionToAdd = transaction.data()\r\n        transactionToAdd.creationDate = moment(\r\n          transactionToAdd.creationDate.toDate(),\r\n        ).format('DD/MM/YYYY')\r\n        transactionToAdd.transactionDate = moment(\r\n          transactionToAdd.transactionDate.toDate(),\r\n        ).format('DD/MM/YYYY')\r\n\r\n        dispatch(\r\n          slice.actions.updateTransaction({ transaction: transactionToAdd }),\r\n        )\r\n\r\n        resolve(transactionToAdd)\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n\r\nconst addBill =\r\n  ({ billNumber, billDate, name, value, userId }) =>\r\n  (dispatch) =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        const id = uuidv4()\r\n        // store user info in firestore\r\n        await firestore\r\n          .collection('supplierBill')\r\n          .doc(id)\r\n          .set({\r\n            id,\r\n            billNumber,\r\n            billDate,\r\n            name,\r\n            creationDate: new Date(),\r\n            value: Number(value),\r\n            userId,\r\n          })\r\n        const bill = await firestore.collection('supplierBill').doc(id).get()\r\n        const billToAdd = bill.data()\r\n        billToAdd.creationDate = moment(billToAdd.creationDate.toDate()).format(\r\n          'DD/MM/YYYY',\r\n        )\r\n        billToAdd.billDate = moment(billToAdd.billDate.toDate()).format(\r\n          'DD/MM/YYYY',\r\n        )\r\n        billToAdd.paid = 0\r\n        billToAdd.leftToPay = Number(value)\r\n        billToAdd.transactions = []\r\n        dispatch(slice.actions.updateSupplierBills({ bill: billToAdd }))\r\n\r\n        resolve(billToAdd)\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n\r\nconst deleteBill =\r\n  ({ id }) =>\r\n  (dispatch) =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        // store user info in firestore\r\n        const querySnapshot = await firestore\r\n          .collection('supplierBill')\r\n          .where('id', '==', id)\r\n          .get()\r\n        const transactionsSnapshot = await firestore\r\n          .collection('transactions')\r\n          .where('billID', '==', id)\r\n          .get()\r\n        transactionsSnapshot.docs.forEach((transaction) => {\r\n          transaction.ref.delete()\r\n        })\r\n        querySnapshot.docs[0].ref.delete()\r\n        dispatch(slice.actions.removeSupplierBill({ id }))\r\n\r\n        resolve()\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n\r\nconst deleteTransaction =\r\n  ({ transaction }) =>\r\n  (dispatch) =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        // store user info in firestore\r\n        const querySnapshot = await firestore\r\n          .collection('transactions')\r\n          .where('id', '==', transaction.id)\r\n          .get()\r\n\r\n        querySnapshot.docs[0].ref.delete()\r\n        dispatch(slice.actions.removeTransaction({ transaction }))\r\n\r\n        resolve()\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n// ------------------------------------\r\n// Exports\r\n// ------------------------------------\r\n\r\nexport const actions = {\r\n  ...slice.actions,\r\n  fetchSupplierBills,\r\n  addTransaction,\r\n  addBill,\r\n  deleteBill,\r\n  deleteTransaction,\r\n}\r\n\r\nexport default slice.reducer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport {\r\n  faExclamationTriangle,\r\n  faEnvelopeOpenText,\r\n  faPaperPlane,\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\n// TODO: add icons here...\r\nexport const loadFontIcons = () =>\r\n  library.add(faExclamationTriangle, faEnvelopeOpenText, faPaperPlane)\r\n\r\nconst FontIcon = ({ name, className, style }) => (\r\n  <FontAwesomeIcon icon={name} className={className} style={style} />\r\n)\r\n\r\nFontIcon.propTypes = {\r\n  name: PropTypes.string,\r\n  className: PropTypes.string,\r\n  style: PropTypes.objectOf(PropTypes.object),\r\n}\r\n\r\nFontIcon.defaultProps = {\r\n  name: '',\r\n  className: '',\r\n  style: {},\r\n}\r\n\r\nexport default FontIcon\r\n","import FontIcon, { loadFontIcons as load } from './FontIcon'\r\n\r\nexport const loadFontIcons = load\r\n\r\nexport default FontIcon\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport moment from 'moment'\r\nimport { firestore } from 'utils/firebase'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\n// ------------------------------------\r\n// Helpers\r\n// ------------------------------------\r\n\r\nconst calculateStatistics = (clientBills) => {\r\n  const results = {\r\n    paid: 0,\r\n    leftToPay: 0,\r\n    sumOfValues: 0,\r\n  }\r\n  clientBills.forEach((bill) => {\r\n    results.paid += bill.paid\r\n    results.leftToPay += bill.leftToPay\r\n    results.sumOfValues += bill.value\r\n  })\r\n  return results\r\n}\r\n\r\n// ------------------------------------\r\n// State\r\n// ------------------------------------\r\n\r\nconst initialState = {\r\n  clientBills: [],\r\n  statistics: {\r\n    paid: 0,\r\n    leftToPay: 0,\r\n    sumOfValues: 0,\r\n  },\r\n}\r\n\r\n// ------------------------------------\r\n// Slices\r\n// -----------------------------------\r\n\r\nconst slice = createSlice({\r\n  name: 'bills',\r\n  initialState,\r\n  reducers: {\r\n    setClientBills: (state, action) => ({\r\n      ...state,\r\n      statistics: action.payload.statistics,\r\n      clientBills: action.payload.clientBills,\r\n    }),\r\n    updateClientBills: (state, action) => {\r\n      const newBills = [action.payload.bill].concat(state.clientBills)\r\n      const statistics = calculateStatistics(newBills)\r\n      return {\r\n        ...state,\r\n        statistics,\r\n        clientBills: newBills,\r\n      }\r\n    },\r\n    removeClientBill: (state, action) => {\r\n      const newBills = state.clientBills.filter(\r\n        (bill) => bill.id !== action.payload.id,\r\n      )\r\n      const statistics = calculateStatistics(newBills)\r\n      return {\r\n        ...state,\r\n        statistics,\r\n        clientBills: newBills,\r\n      }\r\n    },\r\n    updateTransaction: (state, action) => {\r\n      const { transaction } = action.payload\r\n\r\n      const newBills = state.clientBills.map((bill) => {\r\n        if (bill.id === transaction.billID) {\r\n          const paid = transaction.value + bill.paid\r\n          const leftToPay = bill.leftToPay - transaction.value\r\n\r\n          return {\r\n            ...bill,\r\n            paid,\r\n            leftToPay,\r\n            transactions: [transaction].concat(bill.transactions),\r\n          }\r\n        }\r\n        return bill\r\n      })\r\n      const statistics = calculateStatistics(newBills)\r\n      return {\r\n        ...state,\r\n        statistics,\r\n        clientBills: newBills,\r\n      }\r\n    },\r\n    removeTransaction: (state, action) => {\r\n      const { transaction } = action.payload\r\n\r\n      const newBills = state.clientBills.map((bill) => {\r\n        if (bill.id === transaction.billID) {\r\n          const paid = bill.paid - transaction.value\r\n          const leftToPay = bill.leftToPay + transaction.value\r\n\r\n          return {\r\n            ...bill,\r\n            paid,\r\n            leftToPay,\r\n            transactions: bill.transactions.filter(\r\n              (t) => t.id !== transaction.id,\r\n            ),\r\n          }\r\n        }\r\n        return bill\r\n      })\r\n      const statistics = calculateStatistics(newBills)\r\n      return {\r\n        ...state,\r\n        statistics,\r\n        clientBills: newBills,\r\n      }\r\n    },\r\n  },\r\n})\r\n\r\n// ------------------------------------\r\n// Actions\r\n// -----------------------------------\r\n\r\nconst fetchClientBills =\r\n  ({ userId }) =>\r\n  (dispatch) =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        const bills = []\r\n        const clientBillsnapshot = await firestore\r\n          .collection('clientBill')\r\n          .where('userId', '==', userId)\r\n          .orderBy('creationDate', 'desc')\r\n          .get()\r\n\r\n        await clientBillsnapshot.docs.reduce(async (referencePoint, doc) => {\r\n          // Check for execution status of previous iteration, i.e. wait for it to get finished\r\n          await referencePoint\r\n          const document = doc.data()\r\n\r\n          const supplierTransactionsSnapshot = await firestore\r\n            .collection('transactions')\r\n            .where('billID', '==', document.id)\r\n            .orderBy('creationDate', 'desc')\r\n            .get()\r\n\r\n          document.transactions = []\r\n          document.paid = 0\r\n          document.leftToPay = document.value\r\n\r\n          document.creationDate = moment(document.creationDate.toDate()).format(\r\n            'DD/MM/YYYY',\r\n          )\r\n          document.billDate = moment(document.billDate.toDate()).format(\r\n            'DD/MM/YYYY',\r\n          )\r\n\r\n          supplierTransactionsSnapshot.docs.forEach((transactionDoc) => {\r\n            const transaction = transactionDoc.data()\r\n            transaction.creationDate = moment(\r\n              transaction.creationDate.toDate(),\r\n            ).format('DD/MM/YYYY')\r\n            transaction.transactionDate = moment(\r\n              transaction.transactionDate.toDate(),\r\n            ).format('DD/MM/YYYY')\r\n\r\n            document.paid += Number(transaction.value)\r\n            document.leftToPay -= Number(transaction.value)\r\n            document.transactions.push(transaction)\r\n          })\r\n          bills.push(document)\r\n        }, Promise.resolve())\r\n        const statistics = calculateStatistics(bills)\r\n        dispatch(\r\n          slice.actions.setClientBills({ clientBills: bills, statistics }),\r\n        )\r\n\r\n        resolve()\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n\r\nconst addTransaction =\r\n  ({ billID, transactionDate, value }) =>\r\n  (dispatch) =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        const id = uuidv4()\r\n        // store user info in firestore\r\n        await firestore\r\n          .collection('transactions')\r\n          .doc(id)\r\n          .set({\r\n            id,\r\n            billID,\r\n            transactionDate,\r\n            creationDate: new Date(),\r\n            value: Number(value),\r\n          })\r\n        const transaction = await firestore\r\n          .collection('transactions')\r\n          .doc(id)\r\n          .get()\r\n        const transactionToAdd = transaction.data()\r\n        transactionToAdd.creationDate = moment(\r\n          transactionToAdd.creationDate.toDate(),\r\n        ).format('DD/MM/YYYY')\r\n        transactionToAdd.transactionDate = moment(\r\n          transactionToAdd.transactionDate.toDate(),\r\n        ).format('DD/MM/YYYY')\r\n\r\n        dispatch(\r\n          slice.actions.updateTransaction({ transaction: transactionToAdd }),\r\n        )\r\n\r\n        resolve(transactionToAdd)\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n\r\nconst addBill =\r\n  ({ billNumber, billDate, name, value, userId }) =>\r\n  (dispatch) =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        const id = uuidv4()\r\n        // store user info in firestore\r\n        await firestore\r\n          .collection('clientBill')\r\n          .doc(id)\r\n          .set({\r\n            id,\r\n            billNumber,\r\n            billDate,\r\n            name,\r\n            creationDate: new Date(),\r\n            value: Number(value),\r\n            userId,\r\n          })\r\n        const bill = await firestore.collection('clientBill').doc(id).get()\r\n        const billToAdd = bill.data()\r\n        billToAdd.creationDate = moment(billToAdd.creationDate.toDate()).format(\r\n          'DD/MM/YYYY',\r\n        )\r\n        billToAdd.billDate = moment(billToAdd.billDate.toDate()).format(\r\n          'DD/MM/YYYY',\r\n        )\r\n        billToAdd.paid = 0\r\n        billToAdd.leftToPay = Number(value)\r\n        billToAdd.transactions = []\r\n        dispatch(slice.actions.updateClientBills({ bill: billToAdd }))\r\n\r\n        resolve(billToAdd)\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n\r\nconst deleteBill =\r\n  ({ id }) =>\r\n  (dispatch) =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        // store user info in firestore\r\n        const querySnapshot = await firestore\r\n          .collection('clientBill')\r\n          .where('id', '==', id)\r\n          .get()\r\n        const transactionsSnapshot = await firestore\r\n          .collection('transactions')\r\n          .where('billID', '==', id)\r\n          .get()\r\n        transactionsSnapshot.docs.forEach((transaction) => {\r\n          transaction.ref.delete()\r\n        })\r\n        querySnapshot.docs[0].ref.delete()\r\n        dispatch(slice.actions.removeClientBill({ id }))\r\n\r\n        resolve()\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n\r\nconst deleteTransaction =\r\n  ({ transaction }) =>\r\n  (dispatch) =>\r\n    new Promise(async (resolve, reject) => {\r\n      try {\r\n        // store user info in firestore\r\n        const querySnapshot = await firestore\r\n          .collection('transactions')\r\n          .where('id', '==', transaction.id)\r\n          .get()\r\n\r\n        querySnapshot.docs[0].ref.delete()\r\n        dispatch(slice.actions.removeTransaction({ transaction }))\r\n\r\n        resolve()\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n// ------------------------------------\r\n// Exports\r\n// ------------------------------------\r\n\r\nexport const actions = {\r\n  ...slice.actions,\r\n  fetchClientBills,\r\n  addTransaction,\r\n  addBill,\r\n  deleteBill,\r\n  deleteTransaction,\r\n}\r\n\r\nexport default slice.reducer\r\n","import { ClipLoader } from 'react-spinners'\r\nimport { PropTypes } from 'prop-types'\r\n\r\n/**\r\n * types of spinners\r\n * https://www.davidhu.io/react-spinners/\r\n *\r\n * github\r\n * https://github.com/davidhu2000/react-spinners\r\n */\r\n\r\nconst Spinner = ({ color, size, isLoading, ...others }) => (\r\n  <ClipLoader color={color} size={size} loading={isLoading} {...others} />\r\n)\r\n\r\nSpinner.propTypes = {\r\n  color: PropTypes.string,\r\n  size: PropTypes.string,\r\n  isLoading: PropTypes.bool,\r\n}\r\n\r\nSpinner.defaultProps = {\r\n  color: 'black',\r\n  size: '1.5rem',\r\n  isLoading: false,\r\n}\r\n\r\nexport default Spinner\r\n","import Spinner from './Spinner'\r\n\r\nexport default Spinner\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\nimport 'firebase/storage'\r\nimport 'firebase/performance'\r\nimport 'firebase/analytics'\r\nimport config from './config'\r\n\r\nfirebase.initializeApp(config.firebase)\r\nfirebase.analytics()\r\n\r\nexport const auth = firebase.auth()\r\nexport const storage = firebase.storage().ref()\r\nexport const performance = firebase.performance()\r\nexport const firestore = firebase.firestore()\r\n\r\nexport default firebase\r\n","export default {\r\n  firebase: {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  },\r\n}\r\n"],"sourceRoot":""}