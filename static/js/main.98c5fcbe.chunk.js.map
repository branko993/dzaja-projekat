{"version":3,"sources":["utils/store.js","components/Fallback/index.js","components/Fallback/Fallback.js","routes.js","app.js","reportWebVitals.js","index.js","utils/firebase.js","utils/config.js","slices/app.slice.js","utils/const.js","components/FontIcon/FontIcon.js","components/FontIcon/index.js","components/Spinner/Spinner.js","components/Spinner/index.js"],"names":["store","configureStore","reducer","app","middleware","_toConsumableArray","getDefaultMiddleware","Fallback","useEffect","NProgress","start","done","Auth","React","lazy","Dashboard","Router","dispatch","useDispatch","_useSelector","useSelector","state","checked","loggedIn","actions","authenticate","_jsx","HashRouter","children","Suspense","fallback","_jsxs","Switch","Route","path","dashboard","Redirect","to","className","Spinner","size","color","isLoading","App","loadFontIcons","Provider","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","analytics","auth","firestore","storage","ref","performance","slice","createSlice","name","initialState","me","reducers","setMe","action","_objectSpread","payload","setLoggedIn","onAuthStateChanged","_asyncToGenerator","_regeneratorRuntime","mark","_callee","user","wrap","_context","prev","next","abrupt","collection","doc","uid","get","sent","emailVerified","exists","id","data","stop","_x","apply","arguments","signup","_ref2","fullName","email","password","Promise","_ref3","_callee2","resolve","reject","_yield$auth$createUse","_context2","createUserWithEmailAndPassword","sendEmailVerification","set","t0","_x2","_x3","login","_ref4","_ref5","_callee3","_yield$auth$signInWit","_context3","signInWithEmailAndPassword","Error","_x4","_x5","logout","_ref6","_callee4","_context4","signOut","_x6","_x7","resetPassword","sendPasswordResetEmail","profile","confirmEmail","FontIcon","style","FontAwesomeIcon","icon","defaultProps","library","add","faExclamationTriangle","faEnvelopeOpenText","faPaperPlane","others","_objectWithoutProperties","_excluded","ClipLoader","loading"],"mappings":"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","file":"static/js/main.98c5fcbe.chunk.js","sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport logger from 'redux-logger'\r\nimport app from 'slices/app.slice'\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    app,\r\n  },\r\n  middleware:\r\n    process.env.NODE_ENV === 'production'\r\n      ? [...getDefaultMiddleware()]\r\n      : [...getDefaultMiddleware(), logger],\r\n})\r\n\r\nexport default store\r\n","import Fallback from './Fallback'\r\n\r\nexport default Fallback\r\n","import { useEffect } from 'react'\r\nimport NProgress from 'nprogress'\r\nimport 'nprogress/nprogress.css'\r\n\r\nconst Fallback = () => {\r\n  useEffect(() => {\r\n    NProgress.start()\r\n    return () => {\r\n      NProgress.done()\r\n    }\r\n  })\r\n\r\n  return ''\r\n}\r\n\r\nexport default Fallback\r\n","import React, { Suspense, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom'\r\nimport { actions } from 'slices/app.slice'\r\nimport { path } from 'utils/const'\r\nimport Fallback from 'components/Fallback'\r\nimport Spinner from 'components/Spinner'\r\n\r\nconst Auth = React.lazy(() => import('./pages/auth'))\r\nconst Dashboard = React.lazy(() => import('./pages/dashboard'))\r\n\r\nfunction Router() {\r\n  const dispatch = useDispatch()\r\n  const { checked, loggedIn } = useSelector((state) => state.app)\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.authenticate())\r\n  }, [])\r\n\r\n  if (!checked) {\r\n    return (\r\n      <div className=\"app-loader-container\">\r\n        <Spinner size=\"4rem\" color=\"white\" isLoading />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <HashRouter>\r\n      <Suspense fallback={<Fallback />}>\r\n        {!loggedIn ? (\r\n          <Switch>\r\n            <Route path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n            <Redirect to=\"/\" />\r\n          </Switch>\r\n        ) : (\r\n          <Switch>\r\n            <Route path={path.dashboard}>\r\n              <Dashboard />\r\n            </Route>\r\n            <Redirect to={path.dashboard} />\r\n          </Switch>\r\n        )}\r\n      </Suspense>\r\n    </HashRouter>\r\n  )\r\n}\r\n\r\nexport default Router\r\n","import { useEffect } from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { loadFontIcons } from 'components/FontIcon'\r\nimport store from 'utils/store'\r\nimport Router from './routes'\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    loadFontIcons()\r\n  }, [])\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <div data-testid=\"app\" className=\"app\">\r\n        <Router />\r\n      </div>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from 'app'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'theme/reset.scss'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\nimport 'firebase/storage'\r\nimport 'firebase/performance'\r\nimport 'firebase/analytics'\r\nimport config from './config'\r\n\r\nfirebase.initializeApp(config.firebase)\r\nfirebase.analytics()\r\n\r\nexport const auth = firebase.auth()\r\nexport const storage = firebase.storage().ref()\r\nexport const performance = firebase.performance()\r\nexport const firestore = firebase.firestore()\r\n\r\nexport default firebase\r\n","export default {\r\n  firebase: {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  },\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { firestore, auth } from 'utils/firebase'\r\n\r\n// ------------------------------------\r\n// State\r\n// ------------------------------------\r\n\r\nconst initialState = {\r\n  checked: false,\r\n  loggedIn: false,\r\n  me: {},\r\n}\r\n\r\n// ------------------------------------\r\n// Slices\r\n// -----------------------------------\r\n\r\nconst slice = createSlice({\r\n  name: 'app',\r\n  initialState,\r\n  reducers: {\r\n    setMe: (state, action) => ({\r\n      ...state,\r\n      me: action.payload.me,\r\n      loggedIn: action.payload.loggedIn,\r\n      checked: true,\r\n    }),\r\n    setLoggedIn: (state, action) => ({\r\n      ...state,\r\n      loggedIn: action.payload,\r\n    }),\r\n  },\r\n})\r\n\r\n// ------------------------------------\r\n// Actions\r\n// -----------------------------------\r\n\r\nexport const authenticate = () => (dispatch) => {\r\n  auth.onAuthStateChanged(async (me) => {\r\n    if (!me) {\r\n      return dispatch(\r\n        slice.actions.setMe({\r\n          loggedIn: false,\r\n          checked: true,\r\n          me: {},\r\n        }),\r\n      )\r\n    }\r\n\r\n    // get user from firestore\r\n    const user = await firestore.collection('users').doc(me?.uid).get()\r\n\r\n    // login\r\n    return dispatch(\r\n      slice.actions.setMe({\r\n        loggedIn: me?.emailVerified && user.exists,\r\n        me: user.exists\r\n          ? { id: me?.uid, emailVerified: me?.emailVerified, ...user.data() }\r\n          : {},\r\n        checked: true,\r\n      }),\r\n    )\r\n  })\r\n}\r\n\r\nconst signup = ({ fullName, email, password }) => () =>\r\n  new Promise(async (resolve, reject) => {\r\n    try {\r\n      // create user\r\n      const { user } = await auth.createUserWithEmailAndPassword(\r\n        email,\r\n        password,\r\n      )\r\n\r\n      // send confirmation email\r\n      await user.sendEmailVerification()\r\n\r\n      // store user info in firestore\r\n      await firestore.collection('users').doc(user.uid).set({\r\n        fullName,\r\n        email,\r\n      })\r\n\r\n      resolve(user)\r\n    } catch (err) {\r\n      reject(err)\r\n    }\r\n  })\r\n\r\nconst login = ({ email, password }) => (dispatch) =>\r\n  new Promise(async (resolve, reject) => {\r\n    try {\r\n      const { user } = await auth.signInWithEmailAndPassword(email, password)\r\n      if (!user) reject(new Error('Failed to login. please try it again later'))\r\n      if (!user.emailVerified) await user.sendEmailVerification()\r\n      dispatch(authenticate())\r\n      resolve(user)\r\n    } catch (err) {\r\n      reject(err)\r\n    }\r\n  })\r\n\r\nconst logout = () => (dispatch) =>\r\n  new Promise(async (resolve, reject) => {\r\n    try {\r\n      await auth.signOut()\r\n      dispatch(\r\n        slice.actions.setMe({\r\n          checked: true,\r\n          loggedIn: false,\r\n          me: {},\r\n        }),\r\n      )\r\n      resolve()\r\n    } catch (err) {\r\n      reject(err)\r\n    }\r\n  })\r\n\r\nconst resetPassword = (email) => () => auth.sendPasswordResetEmail(email)\r\n\r\n// ------------------------------------\r\n// Exports\r\n// ------------------------------------\r\n\r\nexport const actions = {\r\n  ...slice.actions,\r\n  authenticate,\r\n  signup,\r\n  login,\r\n  logout,\r\n  resetPassword,\r\n}\r\n\r\nexport default slice.reducer\r\n","export const path = {\r\n  login: '/login',\r\n  signup: '/signup',\r\n  profile: '/profile',\r\n  resetPassword: '/reset-password',\r\n  confirmEmail: '/confirm-email',\r\n  dashboard: '/dashboard',\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport {\r\n  faExclamationTriangle,\r\n  faEnvelopeOpenText,\r\n  faPaperPlane,\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\n// TODO: add icons here...\r\nexport const loadFontIcons = () =>\r\n  library.add(faExclamationTriangle, faEnvelopeOpenText, faPaperPlane)\r\n\r\nconst FontIcon = ({ name, className, style }) => (\r\n  <FontAwesomeIcon icon={name} className={className} style={style} />\r\n)\r\n\r\nFontIcon.propTypes = {\r\n  name: PropTypes.string,\r\n  className: PropTypes.string,\r\n  style: PropTypes.objectOf(PropTypes.object),\r\n}\r\n\r\nFontIcon.defaultProps = {\r\n  name: '',\r\n  className: '',\r\n  style: {},\r\n}\r\n\r\nexport default FontIcon\r\n","import FontIcon, { loadFontIcons as load } from './FontIcon'\r\n\r\nexport const loadFontIcons = load\r\n\r\nexport default FontIcon\r\n","import { ClipLoader } from 'react-spinners'\r\nimport { PropTypes } from 'prop-types'\r\n\r\n/**\r\n * types of spinners\r\n * https://www.davidhu.io/react-spinners/\r\n *\r\n * github\r\n * https://github.com/davidhu2000/react-spinners\r\n */\r\n\r\nconst Spinner = ({ color, size, isLoading, ...others }) => (\r\n  <ClipLoader color={color} size={size} loading={isLoading} {...others} />\r\n)\r\n\r\nSpinner.propTypes = {\r\n  color: PropTypes.string,\r\n  size: PropTypes.string,\r\n  isLoading: PropTypes.bool,\r\n}\r\n\r\nSpinner.defaultProps = {\r\n  color: 'black',\r\n  size: '1.5rem',\r\n  isLoading: false,\r\n}\r\n\r\nexport default Spinner\r\n","import Spinner from './Spinner'\r\n\r\nexport default Spinner\r\n"],"sourceRoot":""}